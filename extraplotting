import numpy as np
import matplotlib.pyplot as plt
import matplotlib

oneyear = 3.15545454545*10**7

def realRP(t):
    omegat = 2*np.pi/(3.47*10**(8))*t
    omeganoiset = 2*np.pi/(2.333*10**6)*t # 2.333*10**6 s = period of 27 days (rotational period of the sun)
    return .75 + .243*np.cos(omegat - np.pi)*np.exp(np.cos(omegat - np.pi))

def rpnoisefluc(t):
    # a different form of the radiation pressure with fluctuations
    # taken from eq. 8 in https://articles.adsabs.harvard.edu/pdf/1995A%26A...296..248R
    omegat = 2*np.pi/(3.47*10**(8))*t
    omeganoiset = 2*np.pi/(2.333*10**6)*t # 2.333*10**6 s = period of 27 days (rotational period of the sun)
    omegaoverallfluct = omegat*20 # fluctuations of the noise itself
    flucmag = .1
    return .75 + .243*np.cos(omegat - np.pi)*np.exp(np.cos(omegat - np.pi)) + flucmag*np.sin(omeganoiset)*np.cos(omegaoverallfluct)


def realbeta(t):
    omt = 2*np.pi/(3.47*10**(8))*t
    PIrate2 = (1 + .7/(np.e + 1/np.e)*(np.cos(omt - np.pi)*np.exp(np.cos(omt - np.pi)) + 1/np.e))
    return PIrate2

def elevenyears(t):
    return t/(10.996830884471336)

def eleveninverse(t):
    return (10.996830884471336)*t

t = np.arange(-3.47*10**8, 3.47*10**8, 1000)
rp = np.zeros(t.size)
beta = np.zeros(t.size)
for i in range(t.size):
    rp[i] = realRP(t[i])
    beta[i] = realbeta(t[i])

ticks = [-11, -8.25, -5.5, -2.75, 0, 2.75, 5.5, 8.25, 11]

fsize = 18

"""fig, ax = plt.subplots()
fig.set_figwidth(10)
fig.set_figheight(7.5)
ax.plot(t/oneyear, rp)
plt.xticks(ticks, fontsize=fsize)
plt.grid()
ax.set_xlabel("Time (in years)", fontsize=fsize)
ax.set_ylabel("Value of Î¼(t)", fontsize=fsize)
secax = ax.secondary_xaxis('top', functions=(elevenyears, eleveninverse))
secax.set_xlabel('Number of Solar Cycles', fontsize=fsize)
secax.tick_params(labelsize=fsize)
#plt.title("Magnitude of Radiation Pressure Force Relative to Gravitational Force", fontsize=fsize)
plt.show()"""


fig, ax = plt.subplots()
fig.set_figwidth(11)
fig.set_figheight(7.5)
ax.plot(t/oneyear, beta)
plt.xticks(ticks, fontsize=fsize)
plt.yticks(fontsize=fsize)
plt.grid()
ax.set_xlabel("Time (in years)", fontsize=fsize)
ax.set_ylabel("Value of the Photoionization Rate $\\tilde{\\beta}_{ph1}$ ($10^{-7}$ s$^{-1}$)", fontsize=fsize)
secax = ax.secondary_xaxis('top', functions=(elevenyears, eleveninverse))
secax.set_xlabel('Number of Solar Cycles', fontsize=fsize)
secax.tick_params(labelsize=fsize)
#plt.title("Photoionization Rate over Time", fontsize=fsize)
plt.show()
